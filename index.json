[{"categories":null,"contents":"Hello World A sample go program is show here.\npackage main import \u0026#34;fmt\u0026#34; func main() { message := greetMe(\u0026#34;world\u0026#34;) fmt.Println(message) } func greetMe(name string) string { return \u0026#34;Hello, \u0026#34; + name + \u0026#34;!\u0026#34; } Run the program as below:\n$ go run hello.go     Variables Normal Declaration:\nvar msg string msg = \u0026#34;Hello\u0026#34;   Shortcut:\nmsg := \u0026#34;Hello\u0026#34;     Constants const Phi = 1.618     ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/notes/go/basic/introduction/","summary":"Hello World A sample go program is show here.\npackage main import \u0026#34;fmt\u0026#34; func main() { message := greetMe(\u0026#34;world\u0026#34;) fmt.Println(message) } func greetMe(name string) string { return \u0026#34;Hello, \u0026#34; + name + \u0026#34;!\u0026#34; } Run the program as below:\n$ go run hello.go     Variables Normal Declaration:\nvar msg string msg = \u0026#34;Hello\u0026#34;   Shortcut:\nmsg := \u0026#34;Hello\u0026#34;     Constants const Phi = 1.","tags":null,"title":"Introduction"},{"categories":null,"contents":"Strings str := \u0026#34;Hello\u0026#34; Multiline string\nstr := `Multiline string`     Numbers Typical types\nnum := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(\u0026#39;a\u0026#39;) // byte (alias for uint8) Other Types\nvar u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float     Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0}     Pointers func main () { b := *getPointer() fmt.Println(\u0026#34;Value is\u0026#34;, b) func getPointer () (myPointer *int) { a := 234 return \u0026amp;a a := new(int) *a = 234 Pointers point to a memory location of a variable. Go is fully garbage-collected.\n    Type Conversion i := 2 f := float64(i) u := uint(i)     Slice slice := []int{2, 3, 4} slice := []byte(\u0026#34;Hello\u0026#34;)     ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/notes/go/basic/types/","summary":"Strings str := \u0026#34;Hello\u0026#34; Multiline string\nstr := `Multiline string`     Numbers Typical types\nnum := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(\u0026#39;a\u0026#39;) // byte (alias for uint8) Other Types\nvar u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float     Arrays // var numbers [5]int numbers := [.","tags":null,"title":"Basic Types"},{"categories":null,"contents":"Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;)     Switch switch day { case \u0026#34;sunday\u0026#34;: // cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default!  fallthrough case \u0026#34;saturday\u0026#34;: rest() default: work() }     Loop for count := 0; count \u0026lt;= 10; count++ { fmt.Println(\u0026#34;My counter is at\u0026#34;, count) } entry := []string{\u0026#34;Jack\u0026#34;,\u0026#34;John\u0026#34;,\u0026#34;Jones\u0026#34;} for i, val := range entry { fmt.Printf(\u0026#34;At position %d, the character %s is present\\n\u0026#34;, i, val) n := 0 x := 42 for n != x { n := guess() }     ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/notes/go/basic/flow-control/","summary":"Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;)     Switch switch day { case \u0026#34;sunday\u0026#34;: // cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default!  fallthrough case \u0026#34;saturday\u0026#34;: rest() default: work() }     Loop for count := 0; count \u0026lt;= 10; count++ { fmt.","tags":null,"title":"Flow Control"},{"categories":null,"contents":"Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt;mermaid.initialize({ startOnLoad: true, securityLevel: \u0026#39;loose\u0026#39;});\u0026lt;/script\u0026gt; \u0026lt;div class=\u0026#34;mermaid\u0026#34; align=\u0026#34; left\u0026#34;\u0026gt; graph LR; A[Hard edge] --\u0026gt;|r=0| B(a\u0026lt;sub\u0026gt;0\u0026lt;/sub\u0026gt;) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result one] C --\u0026gt;|Two| E[Result two] \u0026lt;/div\u0026gt;     mermaid \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt;mermaid.initialize({ startOnLoad: true, securityLevel: \u0026#39;loose\u0026#39;});\u0026lt;/script\u0026gt; \u0026lt;div class=\u0026#34;mermaid\u0026#34; align=\u0026#34; left\u0026#34;\u0026gt; graph LR; A[Hard edge] --\u0026gt;|r=0| B(a\u0026lt;sub\u0026gt;0\u0026lt;/sub\u0026gt;) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result one] C --\u0026gt;|Two| E[Result two] \u0026lt;/div\u0026gt;     ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/notes/go/advanced/files/","summary":"Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) \u0026lt;script src=\u0026#34;https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script\u0026gt;mermaid.initialize({ startOnLoad: true, securityLevel: \u0026#39;loose\u0026#39;});\u0026lt;/script\u0026gt; \u0026lt;div class=\u0026#34;mermaid\u0026#34; align=\u0026#34; left\u0026#34;\u0026gt; graph LR; A[Hard edge] --\u0026gt;|r=0| B(a\u0026lt;sub\u0026gt;0\u0026lt;/sub\u0026gt;) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result one] C --\u0026gt;|Two| E[Result two] \u0026lt;/div\u0026gt;     mermaid \u0026lt;script src=\u0026#34;https://cdn.","tags":null,"title":"File Manipulation"},{"categories":null,"contents":"Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME}    Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi     ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/notes/bash/basic/","summary":"Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME}    Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi     ","tags":null,"title":"Bash Variables"},{"categories":null,"contents":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.toml\n``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nBúsqueda de archivos adicionales Para buscar campos adicionales definidos en el front matter, debes añadirlo en 2 lugares.\nEditar layouts/_default/index.JSON Esto expone los valores en /index.json: por ejemplo, para agregar categories ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEditar las opciones de fuse.js para buscar static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.","tags":null,"title":"Resultados de Búsqueda"},{"categories":null,"contents":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.toml\n``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nBúsqueda de archivos adicionales Para buscar campos adicionales definidos en el front matter, debes añadirlo en 2 lugares.\nEditar layouts/_default/index.JSON Esto expone los valores en /index.json: por ejemplo, para agregar categories ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEditar las opciones de fuse.js para buscar static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"Este archivo existe únicamente para responder a la URL /search con la plantilla de diseño search relacionada.\nNo se muestra ningún contenido aquí, todo el contenido se basa en la plantilla layouts/page/search.html\nEstablecer una prioridad muy baja en el mapa del sitio le dirá a los motores de búsqueda que éste no es un contenido importante.\nEsta implementación utiliza Fusejs, jquery y mark.js\nConfiguración inicial La búsqueda depende del tipo de contenido de salida adicional de JSON en config.","tags":null,"title":"Resultados de Búsqueda"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"অনুসন্ধানের ফলাফল"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"June 8, 2010","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"অনুসন্ধানের ফলাফল"},{"categories":null,"contents":"Introduction Pteropus dasymallus or flying foxes (from the {Pteropus Genus) is an insular solitary island fruit bat inhabiting the Ryukyu archipelago in Japan and some Taiwanese islands. The important and widespread decline of this species, while mostly related to habitat loss and hunting 1 2 3 , raises concern about their level of protection.\nCurrently, $ 60 \\%% $ of Pteropus for which data are available are listed as vulnerable, endangered or critically endangered on the IUCN (2020) Red List4.\nFlying fox is a keystone species in tropical forest ecosystems as they provide seed dispersal and pollination services important for forest regeneration, especially in insular ecosystems5.\nFlying foxes disperse seeds by dropping them in the form of fecal pellets. Below a certain density population threshold, flying foxes disperse almost no seed.Therefore, it is important to keep the number of flying foxes above the critical threshold necessary to provide ecosystem services. Unexpected food shortages due to typhoons decrease the abundance of flying foxes and subsequently disrupts forest ecology. Additionally, increases in flying fox abundance may cause conflicts with agriculture. Hence the need to asses and control the population of flying foxes, as well as support ecological studies and conservation programs.\nMonitoring can be done in two forms6\nActive monitoring is used on the field studies, and needs to be conducted on a large scale. It is subject to observational and process uncertainties, and requires a lot of means, both financial and human. Moreover, it is invasive and can disturb the studied individuals. Whereas, passive monitoring is stealthy and non invasive. Passive Acoustic Monitoring (PAM) in particular is one of the most promising monitoring approaches. Although PAM is widely used to study microbats, it has not been used for flying foxes. PAM relies on sound recorders placed in wildlife, which provide environment sounds that are analysed. Flying Foxes do not use echolocation, and interact using audible sounds.\nAlthough an automated detection system is necessary to develop a PAM system for Ryukyu flying foxes, there are no studies or database of vocalizations for this species. Furthermore, studies about the vocalization of Pteropus are scarce.\nThe following figure describe the pipeline Idea. The main goal consists in creating a 3-step pipeline including the following:\n Audio Segmentation (Audio Event Detection): all bat calls recorded have to be isolated from background noises, natural sounds and other species such as frogs and birds. Audio Event Classification: each call can fall in one of the twelve call categories, which provides information on the context of the call, and the interaction. Speaker Recognition: each emitter has to be identified in order to asses the density population and the possible movements, using the previously known location of identification.  This study was supervised by Christian E. Vincenot, in collaboration with Kyoto University\u0026rsquo;s Biosphere Informatics Laboratory which provided the problematic.\nWe recently presented our poster at the 15th European Bat Symposium.    https://doi.org/10.1371/journal.pone.0177748\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n Vincenot CE, Florens FB, Kingston T. Can we protect island flying foxes? Science. 2017 Mar 31;355(6332):1368-1370. doi: 10.1126/science.aam7582. PMID: 28360279.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n Adelman ZN, Albritton LM, Boris-Lawrie K, Buchmeier MJ, Cannon P, Cho M, DiGiusto D, Donahue JK, Federoff HJ, Hammarskjold ML, Hardison AD, Hearing P, Lee B, Lee DA, Porteus MH, Ross LF, Ross SR, Wooley DP, Zoloth L. Protect NIH\u0026rsquo;s DNA advisory committee. Science. 2018 Oct 26;362(6413):409-410. doi: 10.1126/science.aav2483. PMID: 30361364.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n https://www.iucnredlist.org/search?taxonomies=119113\u0026amp;searchType=species\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n COX, P.A., ELMQVIST, T., PIERSON, E.D. and RAINEY, W.E. (1991), Flying Foxes as Strong Interactors in South Pacific Island Ecosystems: A Conservation Hypothesis. Conservation Biology, 5: 448-454. https://doi.org/10.1111/j.1523-1739.1991.tb00351.x. Aziz SA, Clements GR, McConkey KR, et al. Pollination by the locally endangered island flying fox (Pteropus hypomelanus) enhances fruit production of the economically important durian (Durio zibethinus). Ecology and Evolution. 2017 Nov;7(21):8670-8684. DOI: 10.1002/ece3.3213. PMID: 29152168; PMCID: PMC5677486.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n https://doi.org/10.7717/peerj.103\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"October 20, 2021","hero":"/posts/flying-foxes-study/ecology/pipeline2.png","permalink":"https://arthurzucker.github.io/posts/flying-foxes-study/ecology/","summary":"Introduction Pteropus dasymallus or flying foxes (from the {Pteropus Genus) is an insular solitary island fruit bat inhabiting the Ryukyu archipelago in Japan and some Taiwanese islands. The important and widespread decline of this species, while mostly related to habitat loss and hunting 1 2 3 , raises concern about their level of protection.\nCurrently, $ 60 \\%% $ of Pteropus for which data are available are listed as vulnerable, endangered or critically endangered on the IUCN (2020) Red List4.","tags":null,"title":"PAMAI : Passive Acoustic Monitoring Using AI"},{"categories":null,"contents":"My most recent results are available! I implemented the SincNet in Pytorch! My results were logged using , an amazing visualisation tool for sweeps. The dataset is, for now, a third of the Egyptian FruitBat dataset. Soon, I will add other animal recordings in order to asset the generalisation performances of my network!\nI will also compute the IoU for the best classes, and shall compare this implementation with my trainings on YOLOR (You Only Learn One Reprensentation) which I previously implemented.\nI look forward to sharing more. My next task will be to implementd DENet, which is only available on tensorflow, and integrate transformers to my architectures.\n","date":"October 18, 2021","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/posts/flying-foxes-study/ai/aed/","summary":"My most recent results are available! I implemented the SincNet in Pytorch! My results were logged using , an amazing visualisation tool for sweeps. The dataset is, for now, a third of the Egyptian FruitBat dataset. Soon, I will add other animal recordings in order to asset the generalisation performances of my network!\nI will also compute the IoU for the best classes, and shall compare this implementation with my trainings on YOLOR (You Only Learn One Reprensentation) which I previously implemented.","tags":null,"title":"PAMAI : Audio Event Detection"},{"categories":null,"contents":"","date":"October 18, 2021","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/posts/flying-foxes-study/ai/speaker/","summary":"","tags":null,"title":"PAMAI : Speaker Recognition"},{"categories":["Basic"],"contents":" r { color: Red } o { color: Orange } g { color: Green } b { color: Blue }  Introduction Basic RL model In any RL model, there is :\n an RL agent an Environment, deterministic or stochastic actions rewards ( long/short term, intermediate) states (known/unknown) a goal: maximizing the reward function  RL is a Framework for learning by interaction under uncertainty. An agent takes actions, receives rewards, and the environment evolves to the next state.  1. Markov Decision Process A RL problem is modelled using Markov Decision Processes.\nThe RL interactions The classic RL interaction is as follows:\nWe have a discrete decision time $t$ (which would be for example seconds), and at each timestamp :\n The agent selects an action $a_t$, based on $s_t$ the current state of the system. The agent gets his reward $r_t$ The Environment moves to a new state $s_{t+1}$  📝 Markov chains Markov Chains are the building blocks of RL. A Markov Chain is a stochastic (which means that it includes randomness ) model describing a sequence of possible events in which the probability of each event depends only on the state attained in the previous event1. In order to create a model, we need to introduce mathematical definitions.\nDefinition : Given $S$, a state space and a bounded compact subset of the Euclidean space, the discrete time dynamic system $(s_t)_{t\\in \\mathbb{N}}$ is a markov Chain if it satisfies the Markov property:\n$$ \\mathbb{P}\\left(s_{t+1}=s \\mid s_{t}, s_{t-1}, \\ldots, s_{0}\\right)=\\mathbb{P}\\left(s_{t+1}=s \\mid s_{t}\\right)$$\n  📝 Markov Decision Process (MDP) A Markov Decision Process is a tool, to model decision making when outcomes can be random.\nDefinition : a Markov Decision Process is defined as a tuple $M=(S,A,p,r)$ with\n $S$ the (finite) State space $A$ the (finite) Action space $p(s'|s,a)$ the transition probability, such that $\\mathbb{P}\\left(s_{t+1}=s' \\mid s_{t}=s,a_t=a\\right)$ $r(s,a,s')$ is the reward of the transition from $s$ to $s'$ taking the action $a$. The reward can be stochastic, but we can express its distribution, $v$ for $s,a$ as $v(s,a)$. Thus the reward can be writtent as : $r(s,a) = \\mathbb{E}_{R\\sim v(s,a)}[R]$.    Assumptions Markov assumptions : the current state $s$ and the action $a$ are a sufficient statistic for the next state $s'$. This means that \u0026ldquo;no other statistic that can be calculated from the same sample provides any additional information as to the value of the parameter\u0026rdquo;2. Our statistic provides as much information as possible.\nTime assumption : discrete time, at each step, $t\\leftarrow t+1$.\nReward assumption : the reward is uniquely defined by a transition from a state $s$, to $s'$ and an action $a$.\nStationary assumption : transition and reward don\u0026rsquo;t change with time. Otherwise, it\u0026rsquo;s non-stationary.\n2. Policy Definition : a decision rule $d$, which chooses an action from the state $S$ of the system can be :\n Deterministic, given the same set of state $S$, the action $a\\in A$ will be chosen Stochastic, a probability distribution over the actions determines $a$.  Then, it can also be :\n ( stochastic / deterministic ) History-dependant ( stochastic / deterministic ) Markov (relies on the previous state)    Definition : A policy is a sequence of decision rules, it can be :\n Non-stationary, then $\\pi = (d_0,d_1,\u0026hellip;)$ stationary, then $\\pi = (d,d,\u0026hellip;)$    At each round t, an agent following the policy $\\pi$ selects the actions $a_t \\sim d_t(s_t)$ .\nMarkov chain of a policy The transition probability of a random process $(s_t)_{t \\in \\mathbb{N}}$ with regards to a stationary policy $\\pi$ is the following :\n$$ p^\\pi (s'\\mid s) = \\mathbb{P}(s_{t+1}=s' \\mid s_t = s, \\pi) $$\nEvery actions in $A$ (even if it does not take the state from $s$ to $s'$) has to be taken into account. Thus we deduce that $$ p^\\pi (s'\\mid s) = \\sum_{a\\in A} \\pi(s,a)p(s'\\mid s,a) $$\n3. Optimality Principle How do we evaluate a policy ?\n📝 State value function The state value function allows us to determine the effectiveness of a policy. Various definitions can be used depending on the problem at hand. For the following definitions, let $\\pi = (d_1, d_2, \u0026hellip;,)$ be a deterministic policy.\n🎲 The Finite time horizon T policy, sets a deadline $T$, at which the sum of the rewards up to $T$ will be computed. The value function can be expressed as : $$ V^\\pi(t,s) = \\mathbb{E}\\left[ \\sum_{\\tau = t}^{T-1} r(s_\\tau,d_\\tau(h_\\tau)) + R(s_T) \\mid s_t = s; \\pi = (d_1, d_2, \u0026hellip;,) \\right ]$$\nHere, where $R$ is a value function for the final state. Here we compute the expectation of the sum of the rewards obtained taking actions according to the policy, and receiving the corresponding rewards. We have to take into account the Expectation because the decision process can be stochastic, and thus the Expectation gives the equivalent of the mean rewards in a stochastic model.\n$\\qquad$📝 It is usually used when there is a deadline to meet.\n 🎲 The  Infinite Time Horizon with discount  translates a problem that never terminates. Rewards closer in time receive a higher importance : $$ V^{\\pi}\\left(s\\right)\\ =\\ \\mathbb{E}\\left[\\sum_{t=0}^{\\infty}\\gamma^tr\\left(s_t,d_t\\left(h_t\\right)\\right)\\ \\mid s_{0\\ }=s;\\pi \\right] $$\nwhere $0\\leq\\gamma\u0026lt;1$ is the discount factor.\n$\\qquad$📝 We implement it when there is uncertainty about the deadline, or intrinsic definition of discount\n 🎲 The  Stochastic shortest path , the problem never terminates but the agent will reach a termination state. $$V^{\\pi}\\left(s\\right)\\ =\\ \\mathbb{E}\\left[\\sum_{t=0}^{T_{\\pi}}r\\left(s_t,d_t\\left(h_t\\right)\\right)\\ \\mid s_{0\\ }=s;\\pi\\right]$$\n$T_{\\pi}$ : first random time when the termination state is achieved. $\\qquad$📝 Used when there is a specific goal condition\n 🎲 The  Infinite time horizon with average reward, the problem never terminates but the agent focuses on the expected average of the rewards $$V^{\\pi}\\left(s\\right)\\ =\\ \\lim_{T\\to\\infty}\\ \\mathbb{E}\\left[\\frac{1}{T}\\sum_{t=0}^{T-1}r\\left(s_t,d_t\\left(h_t\\right)\\right)\\ \\mid s_{0\\ }=s;\\pi\\right]$$\n$T_{\\pi}$ : first random time when the termination state is achieved. $\\qquad$📝 Used when the system should be constantly controlled over tim\n Optimization problem : Definition : The solution to an MDP is an optimal policy $\\pi^$ satisfying $\\pi^ \\in \\underset{\\pi \\in \\Pi}{\\text{argmax }} V^\\pi$  The value function under that policy is the optimal value function : $V^* = V^{\\pi^*}$\n🎮 Application : I will use a concrete and fun example of a game, where an RL agent can learn to win. The agent will play the 2021 Coding Game Spring Challenge, the Photosynthesis game (but a bit simplified)\nHere, the environment is the board game. Let\u0026rsquo;s define the various notions that we introduced before in this framework.\n🎯 The goal is to end the game with more points than your opponent. For now, let's just say that the goal is to gain as much sun ☀️ as possible.  🌳 The environment in which the game takes place is a forest.  💭 The actions available to the agent are the following :  SEED : Planting a seed. It can only be done in the range of the size of the tree. GROW : Growing a tree. From a seed (size 0) to a sprout (size 1) to a sapling (size 2) to a mature tree (size 3) CUT : Cut a tree. Only mature trees can be cut WAIT : Do nothing   💰 Each action has a reward associated:  Planting a seed costs 1 sun plus number of seeds already on the board-suns. (for example, in the figure above, planting a seed would cost 3 suns) Growing a tree cost size_of_the_tree-suns plus number of trees withe the same size on the board-suns. Cutting a tree gives a reward of 3 suns. (let\u0026rsquo;s forget for now the quality of the soil) Do nothing   📍 The game state is defined by the current state of the board.   https://en.wikipedia.org/wiki/Markov_chain\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n https://en.wikipedia.org/wiki/Sufficient_statistic#cite_note-Fisher1922-1\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n   ","date":"October 18, 2021","hero":"/posts/mva/rl/lesson1/images/forest.jpg","permalink":"https://arthurzucker.github.io/posts/mva/rl/lesson1/","summary":"How to model an RL problem: Markov Decision Processes","tags":["MVA","Reinforcement Learning","English"],"title":"Reinforcement learning, lesson 1"},{"categories":["Basic"],"contents":"This post sums up the content of the lesson n°2 of RL on dynamic programming\n  r { color: Red } o { color: Orange } g { color: Green } b { color: Blue }  Solving the infinite-Horizon discounted MDPs The problem we have to solve is the following : $$ \\begin{align*} \\max {\\pi} V^{\\pi}\\left(s{0}\\right)= \u0026amp; \\ = \u0026amp; \\max {\\pi} \\mathbb{E}\\left[r\\left(s{0}, d_{0}\\left(a_{0} \\mid s_{0}\\right)\\right)+\\gamma r\\left(s_{1}, d_{1}\\left(a_{1} \\mid s_{0}, s_{1}\\right)\\right)+\\gamma^{2} r\\left(s_{2}, d_{2}\\left(a_{2} \\mid s_{0}, s_{1}, s_{2}\\right)\\right)+\\ldots\\right] \\ =\u0026amp;\\mathbb{E}\\left[\\sum_{t=0}^{\\infty} \\gamma^{t} r\\left(s_{t}, a_{t}\\right) \\mid a_{t} \\sim d_{t}\\left(\\cdot \\mid h_{t}\\right)\\right] \\end{align*} $$\nReducing the search space : History based to markov decision Theorem (Bertsekas [2007])\nConsider an MDP with $|A|\u0026lt;\\infty$ and an initial distribution $\\beta$ over states such that $|{s \\in S: \\beta(s)\u0026gt;0}|\u0026lt;\\infty .$ For any policy $\\pi$, let $$ p_{t}^{\\pi}(s, a)=\\mathbb{P}\\left[S_{t}=s, A_{t}=a\\right] ; \\quad p_{t}^{\\pi}(s)=\\mathbb{P}\\left[S_{t}=s\\right] $$ Then for any history-based policy $\\pi$ there exists a Markov policy $\\bar{\\pi}$ such that $$ p_{t}^{\\bar{\\pi}}(s, a)=p_{t}^{\\pi}(s, a) ; \\quad p_{t}^{\\bar{\\pi}}(s)=p_{t}^{\\pi}(s) $$ for any $s \\in S, a \\in A$ and $t \\in \\mathbb{N}^{+}$\n  Introduced the Discounted Occupancy measure but I don\u0026rsquo;t know why.\nNon-stationary to stationary Theorem (Bertsekas [2007]) Consider an MDP with $|A|\u0026lt;\\infty$ and an initial distribution $\\beta$ over states such that $|{s \\in S: \\beta(s)\u0026gt;0}|\u0026lt;\\infty$ Then for any non-stationary policy $\\pi$ there exists a stationary policy $\\bar{\\pi}$ such that $$ \\rho_{\\gamma}^{\\bar{\\pi}}(s, a)=\\rho_{\\gamma}^{\\pi}(s, a) ; \\quad \\rho_{\\gamma}^{\\bar{\\pi}}(s)=\\rho_{\\gamma}^{\\pi}(s) $$ for any $s \\in S, a \\in A$ and $t \\in \\mathbb{N}^{+}$  Simplifying the value function From stochastic to deterministic decision rules Conclusion: we can now focus on stationary policies with deterministic markov decision rules.\nSolving Finite-Horizon MDPs Solving Infinite-Horizon Undiscounted MDPs Summary return the optimal policy ### Complexity of the value operation Relies on the bellman operator, which means solving a matrix system. #### Extensions and Implementations Starvation : may end up in a loop / cycle of update that prevents you from converging Can apply iteratively on the Q function. It's really generic. #### Policy iteration Iterate on them rather than value function. 1. Start from policy 2. Each iteration : - Policy evaluation - bellman operator matrix equation - Policy improvement, compute greedy policy 3. Stop if the policy is not improving Iterate over the $\\pi$. Return $\\pi$ at the end. The sequence generated is non decreasing. This means that it will converge in a **finite** ($ V^{\\pi_k+1} \\geq V^{\\pi_k} $ ) number of iterations. VS the value function that has convergence in infinite. INSERT PROOF HERE! Was done in class. Complexity? $O(S^3)$ which is a bit more than Value State function. Through Monte-Carlo is also interesting, through the expectation but it's an approximative method (control the approximation which propagates through the learning). In practice, different, but the one that converges is the exact one. POlicy improvement step, in $O(A)$ or $O(SA)$ Total depends on $\\gamma$ #### Comparison between Value and Policy Iteration Pros and Cons for each ## Other algorithms based on DP to compute optimal policy Primal LP? -- Example Let\u0026rsquo;s apply the notions to a simple example. Let\u0026rsquo;s consider the following model :\n stands for vertical space --","date":"October 18, 2021","hero":"/posts/mva/rl/lesson2/images/path.png","permalink":"https://arthurzucker.github.io/posts/mva/rl/lesson2/","summary":"How to model an RL problem: Dynamic programming","tags":["MVA","Reinforcement Learning","English"],"title":"Reinforcement learning, lesson 2"},{"categories":["Basic"],"contents":" r { color: Red } o { color: Orange } g { color: Green } b { color: Blue }  What is an edge? It describe a rapid changes in image intensity. 4 discontinuities can create those :\n Surface NOrmal ?? Depth discontinuity Surface Reflectance Illumination discontinuity.  Intensity profiles in the image vary. It can look like a step function, roof edge or line edges. Step is mostly used, given that it is the simplest.\nIn real images, the intensity is noisy and the edges look a bit different from the step function.\nEdge detector has to find were the edge is (position), its magnitude (strength) and its orientation. It also has to be precise. Requirements are linked to performance, resistance to noise etc.\nFirst derivative : For 1D functions : Local extrema in first derivative give the location of the edges, while the height gives its strength.\nFor images: partial derivatives are used.\nInsert images where [x,0] and [0,y] for the gradient. Magnitude is the euclidan norm, and the gradient orientation is the tan-1(dy/dx).\nBut images are continuous. We could use finite difference as the discrete gradient =\u0026gt; use 4 pixels. Can be implemented as convolution! That\u0026rsquo;s really interesting.\n| \u0026mdash;\u0026ndash; | \u0026mdash; | | -1 | 1 | | -1 | 1 |\nVarious gradient operators, what does the size changes? Small = sensible to noise, but very good localization (what does it mean? how does it localize???). Bigger give better detection, les sensible to noise, but take into account things that might be useless.\nInsert python code to compare various sobel filters?\nThe value returned is real, you then need to threshold. Standard threshold vq hysteresis : if magnitude is between 2 threshold, compare with neighboring pixel.\nBut edges have to be grouped.\nSecond derivative : Here, zero-crossing indicates the presence of edges. You have to detect those. The lablacian operator has to be used in that case. But it doesn\u0026rsquo;t provide the orientation of the edges.\nWe have to use at least 3 pixels for each directions. It can again be implemented as a convolution. We have to take into account the orientation, and the distance that is bigger for diagonal values.\nNegative values in the image were mapped to 128. Less will be between those two values.\nSuppress noise Gaussian smoothing! Convolve the signal with the gaussian. The intuition behind is that its a statistical model of noise! Its not just that \u0026ldquo;it works\u0026rdquo;.\nTaking the derivative of the gaussian then convolving saves 1 operation.\nIt works the same with the laplacian. Laplacian of Gaussian, then convolve it.\nBoth operators have pros and cons, but canny edge detectors use the best of both.\nCanny : Smooth image with Gaussian. Then Sobel to compute the gradient. Compute magnitude and orientation. Then Apply laplacian along the direction, 1d laplacian. THen zero crossing ot detect an edge.\n","date":"June 8, 2020","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/posts/mva/recvis/lesson1/","summary":"How to model an RL problem: Markov Decision Processes","tags":["Markdown","Content Organization","Multi-lingual"],"title":"Computer Vision and Object Recognition, lesson 1"},{"categories":["Basic"],"contents":" r { color: Red } o { color: Orange } g { color: Green } b { color: Blue }  Neighbourhood consensus network NIPS\nhow do we scale previous methods up? Mainly two strategies :\n NN Quantisize  1 Efficient Approximate NN search A set of local descriptors, but linear NN search is bad, too slow. So use approximate NN. Find a match that is nearby.\n Best Bin First, K-d trees: explore the cells intersecting the ball to the euclidian distance. Verify that there are no closer points. Youi don\u0026rsquo;t go to the last leaf. Complexity depends on the distribution of the points. Thus the solution is the Approximate NN. Backtracking with limited NB of cell explored, based on their priority ranking. You can also use randomized K-d trees. Locality Sebsitive Hashing : hash the inpus, have the proba of close inspace points, proba of hash being similar is high  ","date":"June 8, 2020","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/posts/mva/recvis/lesson3/","summary":"How to model an RL problem: Markov Decision Processes","tags":["Markdown","Content Organization","Multi-lingual"],"title":"Computer Vision and Object Recognition, lesson 3"},{"categories":["Course notes"],"contents":" r { color: Red } o { color: Orange } g { color: Green } b { color: Blue }  Sigmoid Usually used in the last layer, because it gives strong confidence for example. Usefull for the optimisation.\nLoss function Cross entropy and NLL (Negative Log Likelihood) for regression here\nQuizz:\n MSE, if sigma is constant? Write the density of the gaussian distribution then simplify and remove the constant variance (should do this on paper looks pretty important for intuition)  Classification problems Softlax used in the last layer. But if we don\u0026rsquo;t have a class, we should give him a random class? We don\u0026rsquo;t really want to force the output, but need to know where the network is not confident. Paper on how RELU fails to express the non-confidence look at the slides\nGeneralization Link to double descent?? Grooking\nRegularization Weight decay, make our parameters smaller with L2 regularitaion?\nNormalisation??? Why? Because the activation function has more mapping when you are between 0 znd 1 or something of the kind.\nOptimization for deep learning large scae optimisation paper to read\nIdentifiable model? ONe set of param can rule out everything? Which mean only one minima. But in NN we can change the order of the neurons and still have similar outputs, thus most of the models are non identifiable. Most of the model have various local minimum, but they are pretty similar.\nIdentifiying and attacking the saddle point problem\nBack propagation Follow threw example using the chain rule. Partial derivatives and all\nWheight Initalizer Xavier Unifrom with particular distribution?? Add this to @TODO ANKI. Same activation and gradient variance between all layers.\nBatch normalisation Normalisation the distribution of input features. Prevents exploding gradients and more resilieent to scaling, but why?\nData Augmentation INterpolate two inputs together. Use it as an input to the network, modify cross entropy to work with it mixup cutup. Real data augmentation creating inputs out of the distribution (they can not exist!) artifical modification.\nDropout Use bagging and enesmelbe methods on the various models. You can consider all the variations of the network and train them. Then select the best.\n","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/posts/mva/deeplearning/lesson2/","summary":"Comparing activation functions","tags":["Markdown","DL","activation functions"],"title":"Deep Learning, lesson 1"},{"categories":null,"contents":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```\nSearching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category ``` \u0026hellip; \u0026ldquo;contents\u0026rdquo;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026ldquo;tags\u0026rdquo;:{{ .Params.tags | jsonify }}{{end}}, \u0026ldquo;categories\u0026rdquo; : {{ .Params.categories | jsonify }}, \u0026hellip; ```\nEdit fuse.js options to Search static/js/search.js ``` keys: [ \u0026ldquo;title\u0026rdquo;, \u0026ldquo;contents\u0026rdquo;, \u0026ldquo;tags\u0026rdquo;, \u0026ldquo;categories\u0026rdquo; ] ```\n","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/search/","summary":"This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml ``` [outputs] home = [\u0026ldquo;HTML\u0026rdquo;, \u0026ldquo;JSON\u0026rdquo;] ```","tags":null,"title":"Search Results"},{"categories":null,"contents":"","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/posts/projects/safran/","summary":"","tags":null,"title":"Semantic Segmentation for cars"},{"categories":null,"contents":"","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://arthurzucker.github.io/posts/projects/clusti/","summary":"","tags":null,"title":"Table Structure Recognition"}]